{
    "$schema": "http://json-schema.org/draft-07/schema",
    "$id": "sublime-build",
    "title": "Sublime Build Systems",
    "description": "Sublime Text provides build systems to allow users to run external programs.",
    "type": "object",
    "definitions": {
        "exec": {
            "type": "object",
            "title": "The default target of exec is used by the majority of build systems.",
            "description": "It provides the following options to control what program to execute, and how to display the results.",
            "properties": {
                "cmd": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "title": "A list of strings specifying the executable to run, plus any arguments to pass to it.",
                    "description": "Shell constructs such as piping and redirection are not supported â€“ see shell_cmd. May use variables.",
                    "examples": [
                        [
                            "my_command",
                            "-d",
                            "$file"
                        ]
                    ]
                },
                "shell_cmd": {
                    "type": "string",
                    "title": "A string specifying a shell command to execute.",
                    "description": "Unlike the cmd option, this does allow piping and redirection. Will use bash on Mac and Linux machine, and cmd.exe on Windows. May use variables.",
                    "examples": [
                        "my_command \"$file\" | other_command"
                    ]
                },
                "working_dir": {
                    "type": "string",
                    "title": "A string specifying the directory to execute the cmd or shell_cmd within.",
                    "examples": [
                        "$file_path"
                    ]
                },
                "file_regex": {
                    "type": "string",
                    "title": "A string containing a regular expression to run on the build output to match file information.",
                    "description": "The matched file information is used to enable result navigation. The regex should capture 2, 3 or 4 groups.\n The capture groups should be: \n1) filename \n2)line number \n3)column number \n4)message",
                    "examples": [
                        "^\\s*(\\S[^:]*)\\((\\d+):(\\d+)\\): ([^\\n]+)"
                    ]
                },
                "line_regex": {
                    "type": "string",
                    "title": "A string containing a regular expression to run on the build output to match line information."
                },
                "encoding": {
                    "type": "string",
                    "title": "A string specifying the encoding of the build system output.",
                    "examples": [
                        "iso-8859-1"
                    ]
                },
                "env": {
                    "type": "object",
                    "title": "An object containing environment variable values to use when running the cmd or shell_cmd.",
                    "examples": [
                        {
                            "PYTHONIOENCODING": "utf-8"
                        }
                    ]
                },
                "quiet": {
                    "type": "boolean",
                    "title": "A boolean that reduces the amount of output about the build system invocation.",
                    "examples": [
                        true
                    ]
                },
                "word_wrap": {
                    "type": "boolean",
                    "title": "A boolean that turns on word wrapping in the build system output panel.",
                    "examples": [
                        true
                    ]
                },
                "syntax": {
                    "type": "string",
                    "title": "A string specifying the syntax file to use to highlight the build system output panel.",
                    "examples": [
                        "Packages/JavaScript/JSON.sublime-syntax"
                    ]
                }
            }
        }
    },
    "properties": {
        "selector": {
            "type": "string",
            "title": "The base scope name of the syntax that this build system should be enabled for.",
            "examples": [
                "source.python"
            ]
        },
        "file_patterns": {
            "type": "array",
            "title": "A list of file name patterns the build system should be enabled for.",
            "items": {
                "type": "string"
            },
            "examples": [
                [
                    "*.py"
                ]
            ]
        },
        "keyfiles": {
            "type": "array",
            "title": "A list of file names, if present in one of the opened folders, that will cause the build system to be enabled.",
            "examples": [
                [
                    "Makefile"
                ]
            ]
        },
        "variants": {
            "title": "A list of subsidiary build systems that will inherit the options from the top-level build system.",
            "description": "Each variant needs to specify a name key, and may override or add options to the top-level build system.",
            "examples": [
                [
                    {
                        "name": "Debug Symbols",
                        "cmd": [
                            "my_command",
                            "-D",
                            "$file"
                        ]
                    }
                ]
            ]
        },
        "cancel": {
            "type": [
                "string",
                "array"
            ],
            "title": "A string command name, or a list of string options.",
            "description": "If a string is specified, the command specified will be used to cancel the build. If a list of strings, the primary target will be called, with these options added on. This only needs to be specified when using a custom target.",
            "examples": [
                "cancel_my_build",
                [
                    {
                        "kill": true
                    }
                ]
            ]
        },
        "target": {
            "type": "string",
            "title": "The command to run when the build system is invoked.",
            "description": "The default value of exec allows use of the additional options specified in exec Target Options. If a value other than exec is specified, none of the options in exec Target Options will do anything. See the Advanced Example for a complete example.",
            "examples": [
                "my_build"
            ]
        },
        "windows": {
            "type": "object",
            "title": "An object of options to use when the build system is being executed on a Windows machine.",
            "examples": [
                {
                    "cmd": [
                        "my_command.exe",
                        "/D",
                        "$file"
                    ]
                }
            ]
        },
        "osx": {
            "type": "object",
            "title": "An object of options to use when the build system is being executed on a Mac machine.",
            "examples": [
                {
                    "cmd": [
                        "/Applications/MyProgram.app/Contents/MacOS/my_command",
                        "-d",
                        "$file"
                    ]
                }
            ]
        },
        "linux": {
            "type": "object",
            "title": "An object of options to use when the build system is being executed on a Linux machine.",
            "examples": [
                {
                    "cmd": [
                        "/usr/local/bin/my_command",
                        "-d",
                        "$file"
                    ]
                }
            ]
        }
    },
    "examples": [
        {
            "cmd": [
                "python",
                "$file"
            ],
            "selector": "source.python",
            "file_regex": "^\\s*File \"(...*?)\", line ([0-9]*)"
        }
    ]
}